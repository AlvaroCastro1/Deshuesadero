package formularios;

import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class principal extends javax.swing.JFrame {

    String[] lineas_carros;
    String[] num_carros;
    String Linea_carro = "";
    String Serie_carro = "";
    String num_pieza = "";
    double precio = 0;

    public principal() {
        initComponents();
        cb_vendedores.addItem("Seleccione");

        cb_carros.addItem("Seleccione");

        cb_piezas.addItem("Seleccione");

        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setIDventa();

        setDateToday();

        setVendedores();

        setCarros();

    }

    public void setDateToday() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date date = new java.util.Date();
        jD_fech.setDate(date);

        JTextFieldDateEditor editor = (JTextFieldDateEditor) jD_fech.getDateEditor();
        editor.setEditable(false);
    }

    public void setVendedores() {
        Connection con = null;

        try {

            con = getConnection();
            ps = con.prepareStatement("select id from vendedor;");

            rs = ps.executeQuery();

            if (rs.next()) {
                cb_vendedores.addItem(rs.getString("id"));

            } else {
                JOptionPane.showMessageDialog(null, "No Hay vendedores", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public void setCarros() {
        Connection con = null;

        try {

            con = getConnection();
            ps = con.prepareStatement("select num_serie from carro;");

            rs = ps.executeQuery();

            while (rs.next()) {
                cb_carros.addItem(rs.getString("num_serie"));
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public void setPiezas() {

        cb_piezas.removeAllItems();
        cb_piezas.addItem("Seleccione");

        Connection con = null;

        try {
            con = getConnection();
            Thread.sleep(100);
            ps = con.prepareStatement("select num_pieza from pieza Where num_serie = \'" + cb_carros.getSelectedItem().toString() + "\';");

            rs = ps.executeQuery();

            while (rs.next()) {
                cb_piezas.addItem(rs.getString("num_pieza"));
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_NSerieCarro = new javax.swing.JTextField();
        txt_marca = new javax.swing.JTextField();
        txt_linea = new javax.swing.JTextField();
        txt_kilometraje = new javax.swing.JTextField();
        txt_modeloCarro = new javax.swing.JTextField();
        txt_anioCarro = new com.toedter.calendar.JYearChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_descripcionCarro = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        txt_precio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_garantia = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_NPiezaPieza = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_descripcionPieza = new javax.swing.JTextArea();
        jButton9 = new javax.swing.JButton();
        txt_NumeroSeriePieza = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txt_IDvendedor = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        txt_NombreVendedor = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        txt_fechaNac = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        txt_idVendedorVenta = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        txt_Total = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txt_fechaVenta = new com.toedter.calendar.JDateChooser();
        jButton18 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        txt_IDventa = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jButton20 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton26 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        cb_vendedores = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txt_idVenta = new javax.swing.JTextField();
        jD_fech = new com.toedter.calendar.JDateChooser();
        cantidad_Venta = new javax.swing.JSpinner();
        txt_subtotal = new javax.swing.JTextField();
        jButton27 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_productos = new javax.swing.JTable();
        jTextField5 = new javax.swing.JTextField();
        cb_carros = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        cb_piezas = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setText("Numero de Serie:");

        jLabel2.setText("Marca:");

        jLabel3.setText("Linea:");

        jLabel4.setText("Kilometraje:");

        jLabel5.setText("Modelo:");

        jLabel6.setText("Año:");

        jLabel7.setText("Descripción:");

        txt_NSerieCarro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NSerieCarroKeyTyped(evt);
            }
        });

        txt_marca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_marcaKeyTyped(evt);
            }
        });

        txt_linea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lineaKeyTyped(evt);
            }
        });

        txt_kilometraje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_kilometrajeKeyTyped(evt);
            }
        });

        txt_modeloCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_modeloCarroActionPerformed(evt);
            }
        });
        txt_modeloCarro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_modeloCarroKeyTyped(evt);
            }
        });

        txt_descripcionCarro.setColumns(20);
        txt_descripcionCarro.setRows(5);
        jScrollPane1.setViewportView(txt_descripcionCarro);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Actualizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Limpiar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jButton2)
                .addGap(185, 185, 185)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(110, 110, 110)
                .addComponent(jButton5)
                .addGap(131, 131, 131))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_NSerieCarro)
                    .addComponent(txt_marca)
                    .addComponent(txt_linea)
                    .addComponent(txt_kilometraje)
                    .addComponent(txt_modeloCarro)
                    .addComponent(txt_anioCarro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_NSerieCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_linea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_kilometraje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_modeloCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(txt_anioCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Carro", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jLabel8.setText("Garantia:");

        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreKeyTyped(evt);
            }
        });

        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        jLabel9.setText("Numero de pieza:");

        txt_garantia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_garantiaActionPerformed(evt);
            }
        });
        txt_garantia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_garantiaKeyTyped(evt);
            }
        });

        jButton7.setText("Guardar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel10.setText("Numero de Serie:");

        jLabel11.setText("Descripción:");

        jButton8.setText("Eliminar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel12.setText("Nombre:");

        txt_NPiezaPieza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NPiezaPiezaKeyTyped(evt);
            }
        });

        txt_descripcionPieza.setColumns(20);
        txt_descripcionPieza.setRows(5);
        txt_descripcionPieza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_descripcionPiezaKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txt_descripcionPieza);

        jButton9.setText("Actualizar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        txt_NumeroSeriePieza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NumeroSeriePiezaKeyTyped(evt);
            }
        });

        jLabel13.setText("Precio:");

        jButton10.setText("Limpiar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jButton7)
                        .addGap(185, 185, 185)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                        .addComponent(jButton9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_NPiezaPieza)
                            .addComponent(txt_NumeroSeriePieza)
                            .addComponent(txt_nombre)
                            .addComponent(txt_precio)
                            .addComponent(txt_garantia)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(110, 110, 110)
                .addComponent(jButton10)
                .addGap(131, 131, 131))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_NPiezaPieza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_NumeroSeriePieza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_garantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton9)
                    .addComponent(jButton8)
                    .addComponent(jButton7))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Pieza", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jButton11.setText("Buscar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel14.setText("ID vendedor:");

        jButton12.setText("Guardar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel15.setText("Nombre;");

        jButton13.setText("Eliminar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel16.setText("Fecha Nacimiento:");

        txt_IDvendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_IDvendedorKeyTyped(evt);
            }
        });

        jButton14.setText("Actualizar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        txt_NombreVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NombreVendedorKeyTyped(evt);
            }
        });

        jButton15.setText("Limpiar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jButton12)
                        .addGap(95, 95, 95)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 372, Short.MAX_VALUE)
                        .addComponent(jButton14)
                        .addGap(110, 110, 110))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_IDvendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(txt_NombreVendedor)
                            .addComponent(txt_fechaNac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButton15)
                .addGap(127, 127, 127))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt_IDvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_NombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(txt_fechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jButton14)
                    .addComponent(jButton13)
                    .addComponent(jButton12))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Vendedor", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));

        txt_idVendedorVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idVendedorVentaKeyTyped(evt);
            }
        });

        jButton16.setText("Buscar");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        txt_Total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TotalKeyTyped(evt);
            }
        });

        jLabel17.setText("ID venta:");

        jButton17.setText("Guardar");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel18.setText("Fecha:");

        jButton18.setText("Eliminar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel19.setText("ID Vendedor:");

        txt_IDventa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_IDventaKeyTyped(evt);
            }
        });

        jButton19.setText("Actualizar");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel20.setText("Total:");

        jButton20.setText("Limpiar");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jButton17)
                .addGap(185, 185, 185)
                .addComponent(jButton18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton19)
                .addGap(110, 110, 110)
                .addComponent(jButton20)
                .addGap(131, 131, 131))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_idVendedorVenta, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_IDventa, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Total)
                    .addComponent(txt_fechaVenta, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txt_IDventa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(txt_fechaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txt_idVendedorVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txt_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton20)
                    .addComponent(jButton19)
                    .addComponent(jButton18)
                    .addComponent(jButton17))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Venta", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));

        jButton26.setText("Vender");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel22.setText("N°");

        jLabel23.setText("ID Vendedor");

        jLabel24.setText("Num Pieza:");

        jLabel25.setText("Cantidad:");

        jLabel26.setText("$");

        txt_idVenta.setEditable(false);

        cantidad_Venta.setModel(new javax.swing.SpinnerNumberModel(1.0d, 1.0d, null, 1.0d));
        cantidad_Venta.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cantidad_VentaStateChanged(evt);
            }
        });

        jButton27.setText("Agregar");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        tb_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Pieza", "Cantidad", "Subtotal"
            }
        ));
        jScrollPane3.setViewportView(tb_productos);

        cb_carros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_carrosItemStateChanged(evt);
            }
        });

        jLabel21.setText("Carro:");

        cb_piezas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_piezasItemStateChanged(evt);
            }
        });
        cb_piezas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_piezasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(530, 530, 530)
                                .addComponent(jD_fech, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cb_vendedores, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_idVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(457, 457, 457))))))
                .addContainerGap(230, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(cb_carros, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(cb_piezas, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(cantidad_Venta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton27))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jD_fech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_idVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(cb_vendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantidad_Venta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton27)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(cb_carros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(cb_piezas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Nota", jPanel5);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_modeloCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_modeloCarroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_modeloCarroActionPerformed

    private void txt_NSerieCarroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NSerieCarroKeyTyped
        if (txt_NSerieCarro.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_NSerieCarroKeyTyped

    private void txt_marcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_marcaKeyTyped
        if (txt_marca.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_marcaKeyTyped

    private void txt_lineaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lineaKeyTyped
        if (txt_linea.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_lineaKeyTyped

    private void txt_kilometrajeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kilometrajeKeyTyped
        if (txt_kilometraje.getText().length() >= 8) {
            evt.consume();
        }

        if (Character.isLetter(evt.getKeyChar())) {
            evt.consume();
        } else {
            try {
                Double.parseDouble(txt_kilometraje.getText() + evt.getKeyChar());
            } catch (Exception e) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_kilometrajeKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (txt_anioCarro.getYear() <= 1950) {
            JOptionPane.showMessageDialog(null, "El año no es valido!", "Hey!", JOptionPane.ERROR_MESSAGE);
        } else if (txt_NSerieCarro.getText().isEmpty() || txt_marca.getText().isEmpty() || txt_linea.getText().isEmpty()
                || txt_kilometraje.getText().isEmpty() || txt_modeloCarro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Faltan algunos Datos!", "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;
            try {
                con = getConnection();
                ps = con.prepareStatement("INSERT INTO carro VALUES (?,?,?,?,?,?,?)");
                ps.setString(1, txt_NSerieCarro.getText().trim());
                ps.setString(2, txt_marca.getText().trim());
                ps.setString(3, txt_linea.getText().trim());
                ps.setString(4, txt_kilometraje.getText().trim());
                ps.setString(5, txt_modeloCarro.getText().trim());
                ps.setInt(6, txt_anioCarro.getYear());
                ps.setString(7, txt_descripcionCarro.getText());

                int res = ps.executeUpdate();
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Carro Guardado Correctamente");
                    limpiarCarro();
                } else {
                    JOptionPane.showMessageDialog(null, "Carro NO Guardado", "Error", JOptionPane.ERROR_MESSAGE);
                }

                con.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_modeloCarroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_modeloCarroKeyTyped
        if (txt_modeloCarro.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_modeloCarroKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txt_NSerieCarro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un indice :/", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();
                ps = con.prepareStatement("SELECT * FROM carro WHERE num_serie = ?");
                ps.setString(1, txt_NSerieCarro.getText());

                rs = ps.executeQuery();

                if (rs.next()) {

                    txt_marca.setText(rs.getString("marca"));
                    txt_linea.setText(rs.getString("linea"));
                    txt_kilometraje.setText(rs.getString("kilometraje"));
                    txt_modeloCarro.setText(rs.getString("modelo"));
                    txt_anioCarro.setYear(rs.getInt("anio"));
                    txt_descripcionCarro.setText(rs.getString("descripcion"));

                } else {
                    JOptionPane.showMessageDialog(null, "No existe un Carro con el Numero de Serie", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (txt_NSerieCarro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un Numero de Serie", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {
                con = getConnection();

                ps = con.prepareStatement("DELETE FROM carro WHERE num_serie = ?");
                ps.setString(1, txt_NSerieCarro.getText());

                int res = ps.executeUpdate();

                if (res > 0) {

                    JOptionPane.showMessageDialog(null, "Carro Eliminado");
                    limpiarCarro();

                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el Carro", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();

            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (txt_anioCarro.getYear() <= 1950) {
            JOptionPane.showMessageDialog(null, "El año no es valido!", "Hey!", JOptionPane.ERROR_MESSAGE);
        } else if (txt_NSerieCarro.getText().isEmpty() || txt_marca.getText().isEmpty() || txt_linea.getText().isEmpty()
                || txt_kilometraje.getText().isEmpty() || txt_modeloCarro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();

                ps = con.prepareStatement("UPDATE carro SET marca = ?, linea = ?, kilometraje = ?, modelo = ?, anio = ?, descripcion = ? WHERE num_serie = ?");

                ps.setString(1, txt_marca.getText());
                ps.setString(2, txt_linea.getText());
                ps.setString(3, txt_kilometraje.getText());
                ps.setString(4, txt_modeloCarro.getText());
                ps.setInt(5, txt_anioCarro.getYear());
                ps.setString(6, txt_descripcionCarro.getText());
                ps.setString(7, txt_NSerieCarro.getText());

                int res = ps.executeUpdate();

                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Datos del Carro modificados");
                    limpiarCarro();
                } else {
                    JOptionPane.showMessageDialog(null, "Error Al modificar los datos del Carro", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        limpiarCarro();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txt_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyTyped
        if (txt_nombre.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_nombreKeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (txt_NPiezaPieza.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un indice :/", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();
                ps = con.prepareStatement("SELECT * FROM pieza WHERE num_pieza = ?");
                ps.setString(1, txt_NPiezaPieza.getText());

                rs = ps.executeQuery();

                if (rs.next()) {

                    txt_NumeroSeriePieza.setText(rs.getString("num_serie"));
                    txt_nombre.setText(rs.getString("nombre"));
                    txt_precio.setText(rs.getString("precio_minimo"));
                    txt_garantia.setText(rs.getString("garantia"));
                    txt_descripcionPieza.setText(rs.getString("descripcion"));

                } else {
                    JOptionPane.showMessageDialog(null, "No existe una Pieza con ese Numero de Pieza", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        if (txt_precio.getText().length() >= 8) {
            evt.consume();
        }

        if (Character.isLetter(evt.getKeyChar())) {
            evt.consume();
        } else {
            try {
                Double.parseDouble(txt_precio.getText() + evt.getKeyChar());
            } catch (Exception e) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_precioKeyTyped

    private void txt_garantiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_garantiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_garantiaActionPerformed

    private void txt_garantiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_garantiaKeyTyped
        if (txt_garantia.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_garantiaKeyTyped

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (txt_NPiezaPieza.getText().isEmpty() || txt_NumeroSeriePieza.getText().isEmpty() || txt_nombre.getText().isEmpty()
                || txt_precio.getText().isEmpty() || txt_garantia.getText().isEmpty() || txt_descripcionPieza.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Faltan algunos Datos!", "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;
            try {
                con = getConnection();
                ps = con.prepareStatement("INSERT INTO pieza VALUES (?,?,?,?,?,?)");
                ps.setString(1, txt_NPiezaPieza.getText().trim());
                ps.setString(2, txt_NumeroSeriePieza.getText().trim());
                ps.setString(3, txt_nombre.getText().trim());
                ps.setString(4, txt_precio.getText().trim());
                ps.setString(5, txt_garantia.getText().trim());
                ps.setString(6, txt_descripcionPieza.getText());

                int res = ps.executeUpdate();
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Pieza Guardada Correctamente");
                    limpiarPieza();
                } else {
                    JOptionPane.showMessageDialog(null, "Pieza NO Guardada", "Error", JOptionPane.ERROR_MESSAGE);
                }

                con.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (txt_NPiezaPieza.getText().isEmpty() || txt_NumeroSeriePieza.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un Numero de Pieza", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {
                con = getConnection();

                ps = con.prepareStatement("DELETE FROM pieza WHERE num_pieza = ? AND num_serie= ?");
                ps.setString(1, txt_NPiezaPieza.getText());
                ps.setString(2, txt_NumeroSeriePieza.getText());

                int res = ps.executeUpdate();

                if (res > 0) {

                    JOptionPane.showMessageDialog(null, "Pieza Eliminada");
                    limpiarPieza();

                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar la Pieza", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();

            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txt_NPiezaPiezaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NPiezaPiezaKeyTyped
        if (txt_NPiezaPieza.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_NPiezaPiezaKeyTyped

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (txt_NPiezaPieza.getText().isEmpty() || txt_NumeroSeriePieza.getText().isEmpty() || txt_nombre.getText().isEmpty()
                || txt_precio.getText().isEmpty() || txt_garantia.getText().isEmpty() || txt_descripcionPieza.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();

                ps = con.prepareStatement("UPDATE pieza SET num_serie = ?, nombre  = ?, precio_minimo = ?, garantia = ?, descripcion = ? WHERE num_pieza = ?");

                ps.setString(1, txt_NumeroSeriePieza.getText());
                ps.setString(2, txt_nombre.getText());
                ps.setString(3, txt_precio.getText());
                ps.setString(4, txt_garantia.getText());
                ps.setString(5, txt_descripcionPieza.getText());
                ps.setString(6, txt_NPiezaPieza.getText());

                int res = ps.executeUpdate();

                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Datos de la Pieza modificados");
                    limpiarPieza();
                } else {
                    JOptionPane.showMessageDialog(null, "Error Al modificar los datos de la Pieza", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txt_NumeroSeriePiezaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NumeroSeriePiezaKeyTyped
        if (txt_NumeroSeriePieza.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_NumeroSeriePiezaKeyTyped

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        limpiarPieza();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void txt_descripcionPiezaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionPiezaKeyTyped
        if (txt_NumeroSeriePieza.getText().length() >= 100) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_descripcionPiezaKeyTyped

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (txt_IDvendedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un indice :/", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();
                ps = con.prepareStatement("SELECT * FROM vendedor WHERE id = ?");
                ps.setString(1, txt_IDvendedor.getText());

                rs = ps.executeQuery();

                if (rs.next()) {

                    txt_NombreVendedor.setText(rs.getString("nombre"));
                    txt_fechaNac.setDate(rs.getDate("fechaNac"));

                } else {
                    JOptionPane.showMessageDialog(null, "No existe algún Vendedor con ese ID", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (txt_IDvendedor.getText().isEmpty() || txt_NombreVendedor.getText().isEmpty() || txt_fechaNac.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Faltan algunos Datos!", "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;
            try {
                con = getConnection();
                ps = con.prepareStatement("INSERT INTO vendedor VALUES (?,?,?)");
                ps.setString(1, txt_IDvendedor.getText().trim());
                ps.setString(2, txt_NombreVendedor.getText().trim());
                ps.setObject(3, txt_fechaNac.getDate());

                int res = ps.executeUpdate();
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Vendedor Guardado Correctamente");
                    limpiarVendedor();
                    limpiarCarro();
                } else {
                    JOptionPane.showMessageDialog(null, "Vendedor NO Guardado", "Error", JOptionPane.ERROR_MESSAGE);
                }

                con.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (txt_IDvendedor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un ID", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {
                con = getConnection();

                ps = con.prepareStatement("DELETE FROM vendedor WHERE id = ?");
                ps.setInt(1, Integer.parseInt(txt_IDvendedor.getText()));

                int res = ps.executeUpdate();

                if (res > 0) {

                    JOptionPane.showMessageDialog(null, "Vendedor Eliminado");
                    limpiarVendedor();

                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el Vendedor", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();

            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void txt_IDvendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_IDvendedorKeyTyped
        if (txt_IDvendedor.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_IDvendedorKeyTyped

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (txt_IDvendedor.getText().isEmpty() || txt_NombreVendedor.getText().isEmpty()
                || txt_fechaNac.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();

                ps = con.prepareStatement("UPDATE vendedor SET nombre = ?, fechaNac = ? WHERE id = ?");

                ps.setString(1, txt_NombreVendedor.getText());
                ps.setObject(2, txt_fechaNac.getDate());
                ps.setString(3, txt_IDvendedor.getText());

                int res = ps.executeUpdate();

                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Datos del Vendedor modificados");
                    limpiarVendedor();
                } else {
                    JOptionPane.showMessageDialog(null, "Error Al modificar los datos del Vendedor", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void txt_NombreVendedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NombreVendedorKeyTyped
        if (txt_NombreVendedor.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_NombreVendedorKeyTyped

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        limpiarVendedor();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void txt_idVendedorVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idVendedorVentaKeyTyped
        if (txt_idVendedorVenta.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_idVendedorVentaKeyTyped

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if (txt_IDventa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un ID :/", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();
                ps = con.prepareStatement("SELECT * FROM venta WHERE id_venta = ?");
                ps.setString(1, txt_IDventa.getText());

                rs = ps.executeQuery();

                if (rs.next()) {

                    txt_fechaVenta.setDate(rs.getDate("fecha"));
                    txt_idVendedorVenta.setText(rs.getString("id_vendedor"));
                    txt_Total.setText(rs.getString("total"));

                } else {
                    JOptionPane.showMessageDialog(null, "No existe alguna Venta con ese ID", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void txt_TotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TotalKeyTyped
        if (txt_Total.getText().length() >= 8) {
            evt.consume();
        }

        if (Character.isLetter(evt.getKeyChar())) {
            evt.consume();
        } else {
            try {
                Double.parseDouble(txt_Total.getText() + evt.getKeyChar());
            } catch (Exception e) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txt_TotalKeyTyped

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        if (txt_IDventa.getText().isEmpty() || txt_fechaVenta.getDate() == null || txt_idVendedorVenta.getText().isEmpty()
                || txt_Total.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Faltan algunos Datos!", "Hey!", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;
            try {
                con = getConnection();
                ps = con.prepareStatement("INSERT INTO venta VALUES (?,?,?,?)");
                ps.setString(1, txt_IDventa.getText().trim());
                ps.setObject(2, txt_fechaVenta.getDate());
                ps.setString(3, txt_idVendedorVenta.getText().trim());
                ps.setString(4, txt_Total.getText().trim());

                int res = ps.executeUpdate();
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Venta Guardada Correctamente");
                    limpiarVenta();
                } else {
                    JOptionPane.showMessageDialog(null, "Venta NO Guardado", "Error", JOptionPane.ERROR_MESSAGE);
                }

                con.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if (txt_IDventa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese un ID", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {
                con = getConnection();

                ps = con.prepareStatement("DELETE FROM venta WHERE id_venta = ?");
                ps.setInt(1, Integer.parseInt(txt_IDventa.getText()));

                int res = ps.executeUpdate();

                if (res > 0) {

                    JOptionPane.showMessageDialog(null, "Venta Eliminada");
                    limpiarVenta();

                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar la Venta", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();

            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void txt_IDventaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_IDventaKeyTyped
        if (txt_IDventa.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_IDventaKeyTyped

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        if (txt_IDventa.getText().isEmpty() || txt_fechaVenta.getDate() == null || txt_idVendedorVenta.getText().isEmpty()
                || txt_Total.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hay campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;

            try {

                con = getConnection();

                ps = con.prepareStatement("UPDATE venta SET fecha = ?, id_vendedor = ?, total = ? WHERE id_venta = ?");

                ps.setObject(1, txt_fechaVenta.getDate());
                ps.setString(2, txt_idVendedorVenta.getText());
                ps.setString(3, txt_Total.getText());
                ps.setString(4, txt_IDventa.getText());

                int res = ps.executeUpdate();

                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Datos de la Venta modificados");
                    limpiarVenta();
                } else {
                    JOptionPane.showMessageDialog(null, "Error Al modificar los datos de la Venta", "Error", JOptionPane.ERROR_MESSAGE);
                }
                con.close();
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        limpiarVenta();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        DefaultTableModel tbModelo = (DefaultTableModel) tb_productos.getModel();
        String NumPieza, cantidad, subtotal, id;
        if (tbModelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay datos a guardar", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Connection con = null;
            for (int i = 0; i < tbModelo.getRowCount(); i++) {
                try {
                    NumPieza = tbModelo.getValueAt(i, 0).toString();
                    cantidad = tbModelo.getValueAt(i, 1).toString();
                    subtotal = tbModelo.getValueAt(i, 2).toString();
                    id = txt_idVenta.getText();

                    con = getConnection();

                    ps = con.prepareStatement("INSERT INTO  Nota_venta VALUES (?,?,?,?)");
                    ps.setString(1, NumPieza);
                    ps.setString(2, id);
                    ps.setString(3, cantidad);
                    ps.setString(4, subtotal);

                    int res = ps.executeUpdate();
                    if (res > 0) {
                        JOptionPane.showMessageDialog(null, "Venta Guardada Correctamente");
                        setIDventa();
                    } else {
                        JOptionPane.showMessageDialog(null, "Venta NO Guardado", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                    con.close();
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        if (String.valueOf(cb_piezas.getSelectedItem()) == "" || (int) cantidad_Venta.getValue() == 0 || txt_subtotal.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Faltan algunos datos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String Data[] = {String.valueOf(cb_piezas.getSelectedItem()), String.valueOf(cantidad_Venta.getValue()), txt_subtotal.getText()};
            DefaultTableModel tbModelo = (DefaultTableModel) tb_productos.getModel();
            tbModelo.addRow(Data);
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void cb_carrosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_carrosItemStateChanged
        if (cb_carros.getSelectedIndex() != 0) {
            setPiezas();
        } else {

        }
    }//GEN-LAST:event_cb_carrosItemStateChanged

    private void cb_piezasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_piezasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_piezasActionPerformed

    private void cb_piezasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_piezasItemStateChanged
        if (cb_carros.getSelectedIndex() == 0) {
            System.out.println("vacio");
        } else {
            Connection con = null;

            try {
                con = getConnection();
                ps = con.prepareStatement("select precio_minimo from pieza Where num_pieza = \'" + cb_piezas.getSelectedItem().toString().trim() + "\';");

                rs = ps.executeQuery();

                while (rs.next()) {
                    txt_subtotal.setText(rs.getString("precio_minimo"));
                }

            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }//GEN-LAST:event_cb_piezasItemStateChanged

    private void cantidad_VentaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cantidad_VentaStateChanged

        

    }//GEN-LAST:event_cantidad_VentaStateChanged

    public void limpiarVenta() {
        txt_IDventa.setText("");
        txt_fechaVenta.setDate(null);
        txt_Total.setText("");
        txt_idVendedorVenta.setText("");
    }

    public void limpiarVendedor() {
        txt_IDvendedor.setText("");
        txt_NombreVendedor.setText("");
        txt_fechaNac.setDate(null);
    }

    public void limpiarCarro() {
        txt_NSerieCarro.setText("");
        txt_marca.setText("");
        txt_linea.setText("");
        txt_kilometraje.setText("");
        txt_modeloCarro.setText("");
        txt_anioCarro.setYear(2022);
        txt_descripcionCarro.setText("");
    }

    public void setIDventa() {
        txt_idVenta.setText("");
        Connection con = null;

        try {

            con = getConnection();
            ps = con.prepareStatement("select MAX(id_venta) FROM venta");

            rs = ps.executeQuery();

            if (rs.next()) {
                int num = 1 + Integer.parseInt(rs.getString("MAX(id_venta)"));
                txt_idVenta.setText("" + num);

            } else {
                JOptionPane.showMessageDialog(null, "Error con ID Venta", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Linux".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    public static final String nombreBD = "autopartes";
    public static final String user = "root";
    public static final String pass = "";
    public static final String URL = "jdbc:mysql://localhost:3306/" + nombreBD;
    private static final String CLASE = "com.mysql.jdbc.Driver";

    PreparedStatement ps;
    ResultSet rs;

    public static Connection getConnection() {
        Connection con = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection(URL, user, pass);

        } catch (Exception e) {
            System.out.println(e);
        }
        return con;
    }

    public void limpiarPieza() {
        txt_NPiezaPieza.setText("");
        txt_NumeroSeriePieza.setText("");
        txt_nombre.setText("");
        txt_precio.setText("");
        txt_garantia.setText("");
        txt_descripcionPieza.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner cantidad_Venta;
    private javax.swing.JComboBox<String> cb_carros;
    private javax.swing.JComboBox<String> cb_piezas;
    private javax.swing.JComboBox<String> cb_vendedores;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jD_fech;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable tb_productos;
    private javax.swing.JTextField txt_IDvendedor;
    private javax.swing.JTextField txt_IDventa;
    private javax.swing.JTextField txt_NPiezaPieza;
    private javax.swing.JTextField txt_NSerieCarro;
    private javax.swing.JTextField txt_NombreVendedor;
    private javax.swing.JTextField txt_NumeroSeriePieza;
    private javax.swing.JTextField txt_Total;
    private com.toedter.calendar.JYearChooser txt_anioCarro;
    private javax.swing.JTextArea txt_descripcionCarro;
    private javax.swing.JTextArea txt_descripcionPieza;
    private com.toedter.calendar.JDateChooser txt_fechaNac;
    private com.toedter.calendar.JDateChooser txt_fechaVenta;
    private javax.swing.JTextField txt_garantia;
    private javax.swing.JTextField txt_idVendedorVenta;
    private javax.swing.JTextField txt_idVenta;
    private javax.swing.JTextField txt_kilometraje;
    private javax.swing.JTextField txt_linea;
    private javax.swing.JTextField txt_marca;
    private javax.swing.JTextField txt_modeloCarro;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_subtotal;
    // End of variables declaration//GEN-END:variables
}
